ENEMY_WALK:
	PRINT_DYN_IMG(tijolo,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	PRINT_DYN_IMG(tijolo,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	LOADW(a1,CURRENT_ENEMY_POSX)
	LOADW(a2,CURRENT_ENEMY_POSY)
	LOADW(a3,CURRENT_ENEMY_SPEED)
	add a1,a1,a3
	CALCULATE_BLOCK(a1,a2)
	LOADW(t2,CURRENT_ENEMY_F_BLOCK)
	bne t1,t2,EW_KEEP
	li t2,-16
	SAVEW(t2,CURRENT_ENEMY_SPEED)
	j EW_WALK
EW_KEEP:
	LOADW(t2,CURRENT_ENEMY_I_BLOCK)
	bne t1,t2,EW_WALK
	li t2,16
	SAVEW(t2,CURRENT_ENEMY_SPEED)
EW_WALK:
	LOADW(a1,CURRENT_ENEMY_POSX)
	LOADW(a2,CURRENT_ENEMY_POSY)
	LOADW(a3,CURRENT_ENEMY_SPEED)
	add a1,a1,a3
	SAVEW(a1,CURRENT_ENEMY_POSX)
	jal COLISION_TEST
CT_RETURN:
	PRINT_DYN_IMG(enemy,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	PRINT_DYN_IMG(enemy,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	j POLL_LOOP
	
#######################################################################
# Neste loop 6 inimigos são renderizados utilizando as informações de #
# cada um armazenadas em um vetor				      # 
#######################################################################
ENEMIES_WALK:
	la s3,ENEMY_POSX
	la s4,ENEMY_POSY
	la s5,ENEMY_SPEED
	la s6,ENEMY_INITIAL_BLOCK
	la s7,ENEMY_FINAL_BLOCK
	li t5,0
	li t6,6
EWS_LOOP:
	beq t5,t6,EWS_DONE	# inicio loop
	lw t3,(s3)
	SAVEW(t3,CURRENT_ENEMY_POSX)	
	lw t3,(s4)
	SAVEW(t3,CURRENT_ENEMY_POSY)
	lw t3,(s5)
	SAVEW(t3,CURRENT_ENEMY_SPEED)
	lw t3,(s6)
	SAVEW(t3,CURRENT_ENEMY_I_BLOCK)
	lw t3,(s7)
	SAVEW(t3,CURRENT_ENEMY_F_BLOCK)
	#
	PRINT_DYN_IMG(tijolo,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	PRINT_DYN_IMG(tijolo,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	LOADW(a1,CURRENT_ENEMY_POSX)
	LOADW(a2,CURRENT_ENEMY_POSY)
	LOADW(a3,CURRENT_ENEMY_SPEED)
	add a1,a1,a3
	CALCULATE_BLOCK(a1,a2)
	# Elemento de aleatoriedade: Pega o tempo, divide por 13
	# e caso o resto dessa divisão seja 0, redireciona o inimigo
	li a7,30
	ecall
	li t4,13
	rem t4,a0,t4
	bnez t4,EWS_RNG
	li t4,-1
	mul a3,a3,t4
	SAVEW(a3,CURRENT_ENEMY_SPEED)
	sw a3,(s5)
EWS_RNG:
 	#
	LOADW(t2,CURRENT_ENEMY_F_BLOCK)
	bne t1,t2,EWS_KEEP
	li t2,-16
	SAVEW(t2,CURRENT_ENEMY_SPEED)
	sw t2,(s5)
	j EWS_WALK
EWS_KEEP:
	LOADW(t2,CURRENT_ENEMY_I_BLOCK)
	bne t1,t2,EWS_WALK
	li t2,16
	SAVEW(t2,CURRENT_ENEMY_SPEED)
	sw t2,(s5)
EWS_WALK:
	LOADW(a1,CURRENT_ENEMY_POSX)
	LOADW(a2,CURRENT_ENEMY_POSY)
	LOADW(a3,CURRENT_ENEMY_SPEED)
	add a1,a1,a3
	SAVEW(a1,CURRENT_ENEMY_POSX)
	sw a1,(s3)
	jal COLISION_TEST
	PRINT_DYN_IMG(enemy,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	PRINT_DYN_IMG(enemy,CURRENT_ENEMY_POSX,CURRENT_ENEMY_POSY)
	SWITCH_FRAME()
	#
	addi s3,s3,4
	addi s4,s4,4
	addi s5,s5,4
	addi s6,s6,4
	addi s7,s7,4
	addi t5,t5,1
	j EWS_LOOP
EWS_DONE:
	j POLL_LOOP
